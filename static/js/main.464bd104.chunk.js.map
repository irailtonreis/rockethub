{"version":3,"sources":["services/api.js","components/Container/index.js","Pages/Main/styles.js","Pages/Main/index.js","Pages/Repository/styles.js","Pages/Repository/index.js","routes.js","styles/global.js","App.js","index.js"],"names":["api","axios","create","baseURL","Container","styled","div","rotate","keyframes","Form","form","SubmitButton","button","attrs","props","type","disabled","loading","css","List","ul","Main","state","newRepo","repositories","handleInputChange","e","setState","target","value","handleSubmit","a","preventDefault","get","response","data","name","full_name","localStorage","getItem","this","JSON","parse","_","prevState","setItem","stringify","onSubmit","placeholder","onChange","color","size","margin","map","repository","key","to","encodeURIComponent","Component","Loading","Owner","header","IssueList","Repository","issues","match","repoName","decodeURIComponent","params","Promise","all","per_page","src","owner","avatar_url","alt","login","description","issue","String","id","user","href","html_url","title","console","log","Routes","path","exact","component","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"6RAMeA,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,2B,+XCAJ,IAoBQC,EApBUC,IAAOC,IAAV,K,olDCDtB,IAAMC,EAASC,YAAH,KA4BCC,GApBYJ,IAAOC,IAAV,KAoBFD,IAAOK,KAAV,MAaJC,EAAeN,IAAOO,OAAOC,OAAM,SAAAC,GAAK,MAAI,CACvDC,KAAM,SACNC,SAAUF,EAAMG,WAFUZ,CAAH,KAmBrB,SAAAS,GAAK,OAAIA,EAAMG,SAAWC,YAAjB,IAEMX,MAMNY,EAAOd,IAAOe,GAAV,KC9DIC,E,2MACnBC,MAAQ,CACNC,QAAS,GACTC,aAAc,GACdP,SAAS,G,EAqBXQ,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CAAEJ,QAASG,EAAEE,OAAOC,S,EAGpCC,a,uCAAe,WAAOJ,GAAP,uBAAAK,EAAA,6DACbL,EAAEM,iBAEF,EAAKL,SAAS,CAACV,SAAS,IAHX,EAKqB,EAAKK,MAA/BC,EALK,EAKLA,QAASC,EALJ,EAKIA,aALJ,SAOUxB,EAAIiC,IAAJ,iBAAkBV,IAP5B,OAOPW,EAPO,OASPC,EAAO,CACXC,KAAMF,EAASC,KAAKE,WAGtB,EAAKV,SAAS,CACZH,aAAa,GAAD,mBAAMA,GAAN,CAAoBW,IAChCZ,QAAS,GACTN,SAAS,IAhBE,2C,yIApBb,IAAMO,EAAgBc,aAAaC,QAAQ,gBAExCf,GACDgB,KAAKb,SAAS,CAAEH,aAAciB,KAAKC,MAAMlB,O,yCAK1BmB,EAAGC,GAAW,IACvBpB,EAAiBgB,KAAKlB,MAAtBE,aAELoB,EAAUpB,eAAiBA,GAC5Bc,aAAaO,QAAQ,eAAgBJ,KAAKK,UAAUtB,M,+BA4B/C,IAAD,EACqCgB,KAAKlB,MAAxCC,EADF,EACEA,QAASN,EADX,EACWA,QAASO,EADpB,EACoBA,aAC1B,OACE,kBAAC,EAAD,KACE,4BAAI,kBAAC,IAAD,MAAJ,mBACA,kBAACf,EAAD,CAAMsC,SAAUP,KAAKV,cACnB,2BAAOf,KAAK,OACZiC,YAAY,2BACZnB,MAAON,EACP0B,SAAUT,KAAKf,oBAEf,kBAACd,EAAD,CAAcM,QAASA,GAEnBA,EAAU,kBAAC,IAAD,CAAWiC,MAAM,OAAOC,KAAM,KACvC,kBAAC,IAAD,CAAQD,MAAM,OAAOC,KAAM,GAAIC,OAAQ,MAI9C,kBAACjC,EAAD,KACIK,EAAa6B,KAAI,SAAAC,GAAU,OAC3B,wBAAIC,IAAKD,EAAWlB,MAClB,8BAAOkB,EAAWlB,MAClB,kBAAC,IAAD,CAAMoB,GAAE,sBAAiBC,mBAAmBH,EAAWlB,QAAvD,sB,GAvEoBsB,a,qiDCN3B,IAAMC,EAAUtD,IAAOC,IAAV,KAWPsD,EAAQvD,IAAOwD,OAAV,KA6BLC,EAAYzD,IAAOe,GAAV,KC/BD2C,E,2MAUnBzC,MAAQ,CACNgC,WAAY,GACZU,OAAQ,GACR/C,SAAS,G,oNAGCgD,EAAUzB,KAAK1B,MAAfmD,MAEFC,EAAWC,mBAAmBF,EAAMG,OAAOd,Y,SAEhBe,QAAQC,IAAI,CAC3CtE,EAAIiC,IAAJ,iBAAkBiC,IAClBlE,EAAIiC,IAAJ,iBAAkBiC,EAAlB,WAAqC,CACnCE,OAAQ,CACN9C,MAAO,OACPiD,SAAU,O,mCALXjB,E,KAAYU,E,KAUjBxB,KAAKb,SAAS,CACZ2B,WAAYA,EAAWnB,KACvB6B,OAAQA,EAAO7B,KACflB,SAAS,I,qIAYN,IAAD,EACkCuB,KAAKlB,MAArCgC,EADF,EACEA,WAAYU,EADd,EACcA,OAEpB,OAHM,EACsB/C,QAIxB,kBAAC0C,EAAD,sBAKF,kBAAC,EAAD,KACI,kBAACC,EAAD,KACE,kBAAC,IAAD,CAAMJ,GAAG,KAAT,8BACA,yBAAKgB,IAAKlB,EAAWmB,MAAMC,WAAYC,IAAKrB,EAAWmB,MAAMG,QAC7D,4BAAKtB,EAAWlB,MAChB,2BAAIkB,EAAWuB,cAEjB,kBAACf,EAAD,KACGE,EAAOX,KAAI,SAAAyB,GAAK,OACf,wBAAIvB,IAAKwB,OAAOD,EAAME,KACpB,yBAAKR,IAAKM,EAAMG,KAAKP,WAAYC,IAAKG,EAAMG,KAAKL,QACjD,6BACE,gCACE,uBAAGM,KAAMJ,EAAMK,UAAWL,EAAMM,OAE9BC,QAAQC,IAAIR,IAGhB,2BAAIA,EAAMG,KAAKL,kB,GAzEOlB,aCLzB,SAAS6B,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWrE,IACjC,kBAAC,IAAD,CAAOmE,KAAK,0BAA0BE,UAAW3B,M,0cCT1C4B,kBAAf,KCWeC,MATf,WACE,OACE,oCACA,kBAACL,EAAD,MACA,kBAAC,EAAD,QCHJM,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.464bd104.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled from 'styled-components';\n\n\nexport const Container = styled.div`\n  max-width:700px;\n  background: #FFF;\n  border-radius: 4px;\n  box-shadow: 0 0 20px rgba(0,0,0, 0.1);\n  padding: 30px;\n  margin: 80px auto;\n\n  h1{\n    font-size: 20px;\n    display:flex;\n    align-items:center;\n    flex-direction: row;\n\n    svg{\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport default Container;\n","import styled, { keyframes, css} from 'styled-components';\n\nconst rotate = keyframes`\n  from{\n    transform: rotate(0deg);\n  }\n  to{\n    transform: rotate(360deg);\n  }\n`;\nexport const Container = styled.div`\n  max-width:700px;\n  background: #FFF;\n  border-radius: 4px;\n  box-shadow: 0 0 20px rgba(0,0,0, 0.1);\n  padding: 30px;\n  margin: 80px auto;\n\n  h1{\n    font-size: 20px;\n    display:flex;\n    align-items:center;\n    flex-direction: row;\n\n    svg{\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport const Form = styled.form`\n  margin-top: 30px;\n  display:flex;\n  flex-direction:row;\n  input{\n    flex:1;\n    border: 1px solid #EEE;\n    padding: 10px 15px;\n    border-radius: 4px;\n    font-size: 16px;\n  }\n`;\n\nexport const SubmitButton = styled.button.attrs(props =>({\n  type: 'submit',\n  disabled: props.loading,\n}))`\n  background: #7159c1;\n  border: 0;\n  padding: 0 15px;\n  margin-left: 10px;\n  border-radius: 4px;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n\n  &[disabled]{\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n\n  ${props => props.loading && css`\n    svg{\n      animation: ${rotate} 2s linear infinite;\n    }\n  `}\n\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  margin-top: 30px;\n\n  li{\n    padding: 15px 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items:center;\n\n  & + li{\n    border-top: 1px solid #eee;\n  }\n  a{\n    color: #7159c1;\n    text-decoration: none;\n  }\n\n  }\n`;\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\nimport Container  from '../../components/Container';\nimport { Form, SubmitButton, List } from './styles';\n\nexport default class Main extends Component {\n  state = {\n    newRepo: '',\n    repositories: [],\n    loading: false,\n  };\n\n  // Carregar os dados do localStorage\n  componentDidMount(){\n    const repositories  = localStorage.getItem('repositories');\n\n    if(repositories){\n      this.setState({ repositories: JSON.parse(repositories)})\n    }\n  }\n\n  // Salvar os dados no localStorage\n  componentDidUpdate(_, prevState){\n    const { repositories } = this.state;\n\n    if(prevState.repositories !== repositories){\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({ newRepo: e.target.value });\n  }\n\n  handleSubmit = async  e =>{\n    e.preventDefault();\n\n    this.setState({loading: true});\n\n    const { newRepo, repositories } = this.state;\n\n    const response = await api.get(`/repos/${newRepo}`);\n\n    const data = {\n      name: response.data.full_name,\n    };\n\n    this.setState({\n      repositories: [...repositories, data],\n      newRepo: '',\n      loading: false,\n    });\n  };\n\n  render(){\n    const { newRepo, loading, repositories } = this.state;\n    return (\n      <Container>\n        <h1><FaGithubAlt />Repositórios</h1>\n        <Form onSubmit={this.handleSubmit}>\n          <input type=\"text\"\n          placeholder=\"Adicionar repositório\"\n          value={newRepo}\n          onChange={this.handleInputChange}\n          />\n          <SubmitButton loading={loading}>\n              {\n              loading ? <FaSpinner color=\"#fff\" size={14} />\n              :<FaPlus color=\"#fff\" size={14} margin={0}/>\n              }\n          </SubmitButton>\n        </Form>\n        <List>\n          { repositories.map(repository => (\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>Detalhes</Link>\n            </li>\n          ))\n          }\n        </List>\n      </Container>\n    );\n  }\n  }\n","import styled from 'styled-components';\n\nexport const Loading = styled.div`\n  color: #FFF;\n  font-size:30px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\n\nexport const Owner = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  a{\n    color: #7159c1;\n    font-size: 16px;\n    text-decoration: none;\n    margin-bottom: 5px;\n  }\n  img{\n    width: 120px;\n    border-radius: 50%;\n  }\n  h1{\n    font-size: 24px;\n    margin-top: 10px;\n  }\n  p{\n    margin-top: 5px;\n    font-size: 14px;\n    color: #666;\n    line-height: 1.4;\n    text-align: center;\n    max-width: 400px;\n  }\n`;\n\nexport const IssueList = styled.ul`\n  padding-top: 30px;\n  margin-top:30px;\n  border-top: 1px solid #eee;\n  list-style: none;\n\n  li{\n    display: flex;\n    padding: 15px 10px;\n    border: 1px solid #eee;\n    border-radius: 4px;\n    box-shadow: 2px 2px 2px 1px rgba(0, 0, 0, 0.2);\n    & + li{\n      margin-top: 10px;\n    }\n      img{\n        width: 36px;\n        height: 36px;\n        border-radius: 50%;\n        border: 2px solid #eee;\n    }\n    div{\n      flex: 1;\n      margin-left: 15px;\n      strong{\n        font-size: 16px;\n        a{\n          text-decoration: none;\n          color: #333;\n          &:hover{\n            color: #7159c1;\n          }\n        }\n      }\n    }\n    p{\n      margin-top: 15px;\n      font-size: 12px;\n      color: #999;\n    }\n  }\n\n\n`;\n\n\n","import React, { Component } from 'react';\nimport api from '../../services/api';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nimport { Loading, Owner, IssueList } from './styles';\nimport Container  from '../../components/Container';\n\n\n\nexport default class Repository extends Component{\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        repository: PropTypes.string,\n      }),\n    }).isRequired,\n  };\n\n\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n  }\n    async componentDidMount(){\n      const { match } = this.props;\n\n      const repoName = decodeURIComponent(match.params.repository);\n\n    const [repository, issues] = await Promise.all([\n        api.get(`/repos/${repoName}`),\n        api.get(`/repos/${repoName}/issues`, {\n          params: {\n            state: 'open',\n            per_page: 5,\n          },\n        }),\n      ]);\n\n      this.setState({\n        repository: repository.data,\n        issues: issues.data,\n        loading: false,\n\n      });\n\n  }\n\n\n\n\n\n\n\n  render(){\n    const { repository, issues, loading } = this.state;\n\n    if(loading){\n      return(\n        <Loading>Carregando...</Loading>\n      )\n    }\n    return (\n\n      <Container>\n          <Owner>\n            <Link to=\"/\">Voltar aos repositórios</Link>\n            <img src={repository.owner.avatar_url} alt={repository.owner.login}/>\n            <h1>{repository.name}</h1>\n            <p>{repository.description}</p>\n          </Owner>\n          <IssueList>\n            {issues.map(issue => (\n              <li key={String(issue.id)}>\n                <img src={issue.user.avatar_url} alt={issue.user.login}/>\n                <div>\n                  <strong>\n                    <a href={issue.html_url}>{issue.title}</a>\n                    {\n                      console.log(issue)\n                    }\n                  </strong>\n                  <p>{issue.user.login}</p>\n                </div>\n\n              </li>\n            ))}\n          </IssueList>\n      </Container>\n    );\n\n  }\n}\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Main from './Pages/Main';\nimport Repository from './Pages/Repository';\n\nexport default function Routes(){\n  return(\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Main}/>\n        <Route path=\"/repository/:repository\" component={Repository}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  *{\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n  html, body, #root {\n    min-height:100%;\n  }\n  body{\n    background: #7159c1;\n    -webkit-font-smoothing: antialiased !important;\n  }\n  body, input, button{\n    color: #222;\n    font-size:14px;\n    font-family: Arial, Helvetica, sans-serif;\n  }\n  button{\n    cursor: pointer;\n  }\n`;\n","import React from 'react'\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\n\nfunction App() {\n  return (\n    <>\n    <Routes/>\n    <GlobalStyles/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}